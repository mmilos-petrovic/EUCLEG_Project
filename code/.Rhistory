) +
theme(plot.background = element_rect(fill = "white", colour = "white"))
mergedPlot
saveGGplot2(dataPlot = mergedPlot,
folder = "pca",
fileName = "pca-merged",
isWide = TRUE,
aspect_ratio = 0.52)
}
mergedPlot
saveGGplot2(dataPlot = mergedPlot,
folder = "pca",
fileName = "pca-merged",
isWide = TRUE,
aspect_ratio = 0.52)
{
source("functions/analysisFunctions.r")
grafik12 <- pcaSakategorijamaBezLabela(tmp, 9, "pcaSaClusterima12", drugaosa = 2); grafik12
grafik13 <- pcaSakategorijamaBezLabela(tmp, 9, "pcaSaClusterima13", drugaosa = 3)
mergedPlot <- ggpubr::ggarrange(grafik12, grafik13,
labels = c("A", "B"),
font.label = list(size = 8, color = "black", face = "bold", family = NULL),
ncol = 2,
nrow = 1,
hjust = -1,
vjust = 3,
legend = "bottom",
common.legend = TRUE
) +
theme(plot.background = element_rect(fill = "white", colour = "white"))
mergedPlot
saveGGplot2(dataPlot = mergedPlot,
folder = "pca",
fileName = "pca-merged",
isWide = TRUE,
aspect_ratio = 0.52)
}
{
source("functions/analysisFunctions.r")
grafik12 <- pcaSakategorijamaBezLabela(tmp, 9, "pcaSaClusterima12", drugaosa = 2); grafik12
grafik13 <- pcaSakategorijamaBezLabela(tmp, 9, "pcaSaClusterima13", drugaosa = 3)
mergedPlot <- ggpubr::ggarrange(grafik12, grafik13,
labels = c("A", "B"),
font.label = list(size = 8, color = "black", face = "bold", family = NULL),
ncol = 2,
nrow = 1,
hjust = -1,
vjust = 3,
legend = "bottom",
common.legend = TRUE
) +
theme(plot.background = element_rect(fill = "white", colour = "white"))
mergedPlot
saveGGplot2(dataPlot = mergedPlot,
folder = "pca",
fileName = "pca-merged",
isWide = TRUE,
aspect_ratio = 0.52)
}
{
source("functions/analysisFunctions.r")
grafik12 <- pcaSakategorijamaBezLabela(tmp, 9, "pcaSaClusterima12", drugaosa = 2); grafik12
grafik13 <- pcaSakategorijamaBezLabela(tmp, 9, "pcaSaClusterima13", drugaosa = 3)
mergedPlot <- ggpubr::ggarrange(grafik12, grafik13,
labels = c("A", "B"),
font.label = list(size = 8, color = "black", face = "bold", family = NULL),
ncol = 2,
nrow = 1,
hjust = -1,
vjust = 3,
legend = "bottom",
common.legend = TRUE
) +
theme(plot.background = element_rect(fill = "white", colour = "white"))
mergedPlot
saveGGplot2(dataPlot = mergedPlot,
folder = "pca",
fileName = "pca-merged",
isWide = TRUE,
aspect_ratio = 0.52)
}
{
source("functions/analysisFunctions.r")
grafik12 <- pcaSakategorijamaBezLabela(tmp, 9, "pcaSaClusterima12", drugaosa = 2); grafik12
grafik13 <- pcaSakategorijamaBezLabela(tmp, 9, "pcaSaClusterima13", drugaosa = 3)
mergedPlot <- ggpubr::ggarrange(grafik12, grafik13,
labels = c("A", "B"),
font.label = list(size = 8, color = "black", face = "bold", family = NULL),
ncol = 2,
nrow = 1,
hjust = -1,
vjust = 3,
legend = "bottom",
common.legend = TRUE
) +
theme(plot.background = element_rect(fill = "white", colour = "white"))
mergedPlot
saveGGplot2(dataPlot = mergedPlot,
folder = "pca",
fileName = "pca-merged",
isWide = TRUE,
aspect_ratio = 0.5)
}
{
source("functions/analysisFunctions.r")
grafik12 <- pcaSakategorijamaBezLabela(tmp, 9, "pcaSaClusterima12", drugaosa = 2); grafik12
grafik13 <- pcaSakategorijamaBezLabela(tmp, 9, "pcaSaClusterima13", drugaosa = 3)
mergedPlot <- ggpubr::ggarrange(grafik12, grafik13,
labels = c("A", "B"),
font.label = list(size = 8, color = "black", face = "bold", family = NULL),
ncol = 2,
nrow = 1,
hjust = -1,
vjust = 3,
legend = "bottom",
common.legend = TRUE
) +
theme(plot.background = element_rect(fill = "white", colour = "white"))
mergedPlot
saveGGplot2(dataPlot = mergedPlot,
folder = "pca",
fileName = "pca-merged",
isWide = TRUE,
aspect_ratio = 0.52)
}
require(viridis)
require(dendsort)
require(dendextend)
require(gplots)
require(clv)
dir.create(file.path(REZULTATI_FOLDER, "clusters"), showWarnings = FALSE)
blups_sca <- as.data.frame(scale(as.matrix(BLUPS)))
colnames(blups_sca) <- VAR_NAMES_SHORT
row_colors <- c("magenta", "#008080", "orange", "red3", "green2", "blue", "black")
row_dend <- as.dendrogram(hclust(dist(blups_sca, method = "euclidean"), method = "complete"))
row_dend <- set(row_dend, "branches_lwd", 1)
row_dend <- dendextend::color_branches(row_dend, k = 7, col = row_colors,
groupLabels = c("A", "B", "C", "D", "E", "F", "G"))
plot(row_dend)
pheno_colors <- c("red3", "green2", "orange")
pheno_dend <- as.dendrogram(hclust(as.dist(1-cor(blups_sca, method = "pearson")), method = "complete"))
pheno_dend <- set(pheno_dend, "branches_lwd", 2)
pheno_dend <- dendsort(dendextend::color_branches(pheno_dend, k = 3, col = pheno_colors))
plot(pheno_dend)
tiff( res = 300, width = 185, height = 185, units = "mm",
file = paste(REZULTATI_FOLDER, "clusters/dendrogramHeatmap.tiff", sep = "") , type = "cairo")
heatmap.2(x = as.matrix(blups_sca),
Rowv = row_dend,
Colv = pheno_dend,
col = colorpanel(50, "magenta", "white", "green3"),
scale = "none",
density.info = "none",
trace = "none",
labRow = "",
colsep = c(4,6),
rowsep = c(14, 20, 46, 65, 93, 164, 220),
sepcolor = "#666666",
sepwidth = c(0.01,0.3),
)
dev.off()
cut <- cutree(row_dend, k = 7)
row_dend_info <- clv::cls.scatt.data(blups_sca, cut)
BLUPS_SCALED_WITH_MEMBERS <- blups_sca %>%
dplyr::select(DTF, HFP, DTM, PH, PPN, SPP, NOB, PPF, PL) %>%
cbind("Genotype" = rownames(BLUPS)) %>% cbind("MemberOf" = as.vector(cut))
View(BLUPS_SCALED_WITH_MEMBERS)
summary(BLUPS_SCALED_WITH_MEMBERS$MemberOf)
BLUPS_SCALED_WITH_MEMBERS %>% dplyr::summarise()
BLUPS_SCALED_WITH_MEMBERS %>% dplyr::summarise(n = n())
BLUPS_SCALED_WITH_MEMBERS %>% dplyr::group_by(MemberOf) %>%  dplyr::summarise(n = n())
BLUPS_SCALED_WITH_MEMBERS$MemberOf[BLUPS_SCALED_WITH_MEMBERS$MemberOf == "1"] <- "C"
BLUPS_SCALED_WITH_MEMBERS$MemberOf[BLUPS_SCALED_WITH_MEMBERS$MemberOf == "2"] <- "D"
BLUPS_SCALED_WITH_MEMBERS$MemberOf[BLUPS_SCALED_WITH_MEMBERS$MemberOf == "3"] <- "A"
BLUPS_SCALED_WITH_MEMBERS$MemberOf[BLUPS_SCALED_WITH_MEMBERS$MemberOf == "4"] <- "B"
BLUPS_SCALED_WITH_MEMBERS$MemberOf[BLUPS_SCALED_WITH_MEMBERS$MemberOf == "5"] <- "E"
BLUPS_SCALED_WITH_MEMBERS$MemberOf[BLUPS_SCALED_WITH_MEMBERS$MemberOf == "6"] <- "G"
BLUPS_SCALED_WITH_MEMBERS$MemberOf[BLUPS_SCALED_WITH_MEMBERS$MemberOf == "7"] <- "F"
blups_scaled_all <- BLUPS_SCALED_WITH_MEMBERS %>% dplyr::left_join(GENOTYPE_BT,  by = c('Genotype' = 'GE'))
averages_per_cluster <- blups_scaled_all %>%
dplyr::group_by(MemberOf) %>%
dplyr::summarise(across(DTF:PL, mean, na.rm = TRUE))
count_per_cluster <- blups_scaled_all %>%
dplyr::group_by(MemberOf) %>%
dplyr::summarise(n = n())
count_per_bt <- blups_scaled_all %>%
dplyr::group_by(BT) %>%
dplyr::summarise(n = n())
count_per_cluster_bt <- blups_scaled_all %>%
dplyr::group_by(MemberOf, BT) %>%
dplyr::summarise(n = n())
writeToExcelFile("clusters/clustering-info", "cluster_members", list(blups_scaled_all), writeRowNames = TRUE)
writeToExcelFile("clusters/clustering-info", "averages_per_cluster", list(averages_per_cluster), writeRowNames = FALSE)
writeToExcelFile("clusters/clustering-info", "count_per_cluster_bt", list(count_per_cluster_bt), writeRowNames = FALSE)
writeToExcelFile("clusters/clustering-info", "average-distance",
list(row_dend_info$intercls.average, row_dend_info$cluster.size),
writeRowNames = FALSE)
writeToExcelFile("clusters/clustering-info", "average-intra",
list(row_dend_info$intracls.average, row_dend_info$cluster.size),
writeRowNames = FALSE)
rm(averages_per_cluster, blups_sca, count_per_cluster, cut,
pheno_dend, row_dend, row_colors, pheno_colors,
count_per_cluster_bt, count_per_bt, blups_scaled_all, row_dend_info)
VAR_NAMES_SHORT
blups_sca <- as.data.frame(scale(as.matrix(BLUPS)))
blups_sca
colnames(blups_sca)
VAR_NAMES_SHORT
install,pcakages("colourPicker")
install.pcakages("colourPicker")
install.packages("colourPicker")
install.packages("colourpicker")
colourpicker:::colourPickerAddin()
colourpicker:::plotHelperAddin()
detach("package:ggrepel", unload = TRUE)
dir.create(file.path(REZULTATI_FOLDER, "maps"), showWarnings = FALSE)
mapeCreator()
require(sf)
?ne_countries
detach("package:sf", unload = TRUE)
#require(sf)
require(rnaturalearth)
citationInfo("rnaturalearth")
mapeCreator <- function()
{
world <- rnaturalearth::ne_countries(scale = "small", returnclass = "sf")
genotype_info <- readExcelFajl(1, c(rep("character", 7)), 'genotype-origin.xlsx')
country_count <- genotype_info %>%
dplyr::select(Origin) %>% group_by(Origin) %>%
dplyr::summarise(count = n()) %>%
arrange(desc(count)) %>% mutate(Visited = TRUE) %>% na.omit()
country_colored <- world %>%
dplyr::select(geometry, name, iso_a3_eh) %>%
left_join(country_count, by = c("iso_a3_eh" = "Origin")) %>%
na.omit() %>%
filter(Visited == TRUE) %>%
arrange(desc(count))
country_labeled <- country_colored %>%
dplyr::mutate(labels = c(paste(country_colored$iso_a3_eh, country_colored$count, sep = " "))) %>%
head(12)
worldMap <- world %>%
filter(admin != "Antarctica") %>%
st_transform(crs = "+proj=robin") %>%
ggplot() +
theme_bw() +
geom_sf(color = "white") +
geom_sf(data = country_colored, aes(fill = Visited)) +
scale_fill_manual(values = BLUE_BACK) +
ggrepel::geom_label_repel(
data = country_labeled,
aes(label = labels, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
max.overlaps = 140,
box.padding = 0.1,
label.padding = 0.1,
label.size = 0.1,
size = 1.3,
fontface = 'bold'
) +
theme(plot.title = element_text(face = "bold"),
axis.text.x = element_blank(),
legend.position = "none",
axis.ticks.x = element_blank()
)+
xlab("") +
ylab("")
saveGGplot2(dataPlot = worldMap, fileName = "maps/mapWorld", isWide = FALSE, aspect_ratio = 0.5)
SHP_0 <- get_eurostat_geospatial(resolution = 10,
nuts_level = 0,
year = 2021)
locations <- data.frame(ID = c("AG", "IFC", "BO", "GU"),
east = c(-6.36, 21.20, 23.30, 3.81),
nort = c(37.46, 43.58, 60.49, 50.98))
europeMap <- SHP_0 %>%
ggplot() +
geom_sf() +
geom_point(data = locations,
aes(x = east, y = nort),
col = BLUE, size=4)+
geom_label(label = "AG",
x = -6.36, y = 37.46 + 3,
label.padding = unit(0.2, "lines"),
size = 3
)+
geom_label(label = "IFC",
x = 21.20, y = 43.58 + 3,
label.padding = unit(0.2, "lines"),
size = 3
)+
geom_label(label = "BO", x = 23.30, y = 60.49 + 3,
label.padding = unit(0.2, "lines"),
size = 3
)+
geom_label(label = "GU", x = 3.81, y = 50.98 + 3,
label.padding = unit(0.2, "lines"),
size = 3
)+
scale_x_continuous(limits = c(-10, 35)) +
scale_y_continuous(limits = c(35, 65)) +
xlab(" ") + ylab(" ") +
theme_bw()
saveGGplot2(dataPlot = europeMap, fileName = "maps/mapEurope", isWide = FALSE, aspect_ratio = 1)
}
mapeCreator()
world <- rnaturalearth::ne_countries(scale = "small", returnclass = "sf")
genotype_info <- readExcelFajl(1, c(rep("character", 7)), 'genotype-origin.xlsx')
country_count <- genotype_info %>%
dplyr::select(Origin) %>% group_by(Origin) %>%
dplyr::summarise(count = n()) %>%
arrange(desc(count)) %>% mutate(Visited = TRUE) %>% na.omit()
country_colored <- world %>%
dplyr::select(geometry, name, iso_a3_eh) %>%
left_join(country_count, by = c("iso_a3_eh" = "Origin")) %>%
na.omit() %>%
filter(Visited == TRUE) %>%
arrange(desc(count))
country_labeled <- country_colored %>%
dplyr::mutate(labels = c(paste(country_colored$iso_a3_eh, country_colored$count, sep = " "))) %>%
head(12)
worldMap <- world %>%
filter(admin != "Antarctica") %>%
st_transform(crs = "+proj=robin") %>%
ggplot() +
theme_bw() +
geom_sf(color = "white") +
geom_sf(data = country_colored, aes(fill = Visited)) +
scale_fill_manual(values = BLUE_BACK) +
ggrepel::geom_label_repel(
data = country_labeled,
aes(label = labels, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
max.overlaps = 140,
box.padding = 0.1,
label.padding = 0.1,
label.size = 0.1,
size = 1.3,
fontface = 'bold'
) +
theme(plot.title = element_text(face = "bold"),
axis.text.x = element_blank(),
legend.position = "none",
axis.ticks.x = element_blank()
)+
xlab("") +
ylab("")
require(sf)
mapeCreator <- function()
{
world <- rnaturalearth::ne_countries(scale = "small", returnclass = "sf")
genotype_info <- readExcelFajl(1, c(rep("character", 7)), 'genotype-origin.xlsx')
country_count <- genotype_info %>%
dplyr::select(Origin) %>% group_by(Origin) %>%
dplyr::summarise(count = n()) %>%
arrange(desc(count)) %>% mutate(Visited = TRUE) %>% na.omit()
country_colored <- world %>%
dplyr::select(geometry, name, iso_a3_eh) %>%
left_join(country_count, by = c("iso_a3_eh" = "Origin")) %>%
na.omit() %>%
filter(Visited == TRUE) %>%
arrange(desc(count))
country_labeled <- country_colored %>%
dplyr::mutate(labels = c(paste(country_colored$iso_a3_eh, country_colored$count, sep = " "))) %>%
head(12)
worldMap <- world %>%
filter(admin != "Antarctica") %>%
sf::st_transform(crs = "+proj=robin") %>%
ggplot() +
theme_bw() +
geom_sf(color = "white") +
geom_sf(data = country_colored, aes(fill = Visited)) +
scale_fill_manual(values = BLUE_BACK) +
ggrepel::geom_label_repel(
data = country_labeled,
aes(label = labels, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
max.overlaps = 140,
box.padding = 0.1,
label.padding = 0.1,
label.size = 0.1,
size = 1.3,
fontface = 'bold'
) +
theme(plot.title = element_text(face = "bold"),
axis.text.x = element_blank(),
legend.position = "none",
axis.ticks.x = element_blank()
)+
xlab("") +
ylab("")
saveGGplot2(dataPlot = worldMap, fileName = "maps/mapWorld", isWide = FALSE, aspect_ratio = 0.5)
SHP_0 <- get_eurostat_geospatial(resolution = 10,
nuts_level = 0,
year = 2021)
locations <- data.frame(ID = c("AG", "IFC", "BO", "GU"),
east = c(-6.36, 21.20, 23.30, 3.81),
nort = c(37.46, 43.58, 60.49, 50.98))
europeMap <- SHP_0 %>%
ggplot() +
geom_sf() +
geom_point(data = locations,
aes(x = east, y = nort),
col = BLUE, size=4)+
geom_label(label = "AG",
x = -6.36, y = 37.46 + 3,
label.padding = unit(0.2, "lines"),
size = 3
)+
geom_label(label = "IFC",
x = 21.20, y = 43.58 + 3,
label.padding = unit(0.2, "lines"),
size = 3
)+
geom_label(label = "BO", x = 23.30, y = 60.49 + 3,
label.padding = unit(0.2, "lines"),
size = 3
)+
geom_label(label = "GU", x = 3.81, y = 50.98 + 3,
label.padding = unit(0.2, "lines"),
size = 3
)+
scale_x_continuous(limits = c(-10, 35)) +
scale_y_continuous(limits = c(35, 65)) +
xlab(" ") + ylab(" ") +
theme_bw()
saveGGplot2(dataPlot = europeMap, fileName = "maps/mapEurope", isWide = FALSE, aspect_ratio = 1)
}
mapeCreator()
citationInfo("eurostat")
mapeCreator <- function()
{
world <- rnaturalearth::ne_countries(scale = "small", returnclass = "sf")
genotype_info <- readExcelFajl(1, c(rep("character", 7)), 'genotype-origin.xlsx')
country_count <- genotype_info %>%
dplyr::select(Origin) %>% group_by(Origin) %>%
dplyr::summarise(count = n()) %>%
arrange(desc(count)) %>% mutate(Visited = TRUE) %>% na.omit()
country_colored <- world %>%
dplyr::select(geometry, name, iso_a3_eh) %>%
left_join(country_count, by = c("iso_a3_eh" = "Origin")) %>%
na.omit() %>%
filter(Visited == TRUE) %>%
arrange(desc(count))
country_labeled <- country_colored %>%
dplyr::mutate(labels = c(paste(country_colored$iso_a3_eh, country_colored$count, sep = " "))) %>%
head(12)
worldMap <- world %>%
filter(admin != "Antarctica") %>%
sf::st_transform(crs = "+proj=robin") %>%
ggplot() +
theme_bw() +
geom_sf(color = "white") +
geom_sf(data = country_colored, aes(fill = Visited)) +
scale_fill_manual(values = BLUE_BACK) +
ggrepel::geom_label_repel(
data = country_labeled,
aes(label = labels, geometry = geometry),
stat = "sf_coordinates",
min.segment.length = 0,
max.overlaps = 140,
box.padding = 0.1,
label.padding = 0.1,
label.size = 0.1,
size = 1.3,
fontface = 'bold'
) +
theme(plot.title = element_text(face = "bold"),
axis.text.x = element_blank(),
legend.position = "none",
axis.ticks.x = element_blank()
)+
xlab("") +
ylab("")
saveGGplot2(dataPlot = worldMap, fileName = "maps/mapWorld", isWide = FALSE, aspect_ratio = 0.5)
SHP_0 <- eurostat::get_eurostat_geospatial(resolution = 10,
nuts_level = 0,
year = 2021)
locations <- data.frame(ID = c("AG", "IFC", "BO", "GU"),
east = c(-6.36, 21.20, 23.30, 3.81),
nort = c(37.46, 43.58, 60.49, 50.98))
europeMap <- SHP_0 %>%
ggplot() +
geom_sf() +
geom_point(data = locations,
aes(x = east, y = nort),
col = BLUE, size=4)+
geom_label(label = "AG",
x = -6.36, y = 37.46 + 3,
label.padding = unit(0.2, "lines"),
size = 3
)+
geom_label(label = "IFC",
x = 21.20, y = 43.58 + 3,
label.padding = unit(0.2, "lines"),
size = 3
)+
geom_label(label = "BO", x = 23.30, y = 60.49 + 3,
label.padding = unit(0.2, "lines"),
size = 3
)+
geom_label(label = "GU", x = 3.81, y = 50.98 + 3,
label.padding = unit(0.2, "lines"),
size = 3
)+
scale_x_continuous(limits = c(-10, 35)) +
scale_y_continuous(limits = c(35, 65)) +
xlab(" ") + ylab(" ") +
theme_bw()
saveGGplot2(dataPlot = europeMap, fileName = "maps/mapEurope", isWide = FALSE, aspect_ratio = 1)
}
mapeCreator()
